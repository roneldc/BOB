@model AccompProject.Models.FileAccompView


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>





</div>

@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.IDAccomp)
            @Html.HiddenFor(model => model.FileId)
            @Html.HiddenFor(model => model.IDPhysical)


            @Html.HiddenFor(model => model.FileType)
            @Html.HiddenFor(model => model.FileName)
            @Html.HiddenFor(model => model.ContentType)
            @Html.HiddenFor(model => model.Content)
            @Html.HiddenFor(model => model.mnt)
            @Html.HiddenFor(model => model.yr)
            @Html.HiddenFor(model => model.userid)
            @Html.HiddenFor(model => model.email, new { htmlAttributes = new { id = "email" } })







            <h4>STATUS OF IMPLEMENTATION</h4>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.status, (IEnumerable<SelectListItem>)ViewBag.status, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>


            </div>
            <hr />

            <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                    </div>
                </div>




        </div>



    </div>





    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Update" id="submit" />
    </div>
}
