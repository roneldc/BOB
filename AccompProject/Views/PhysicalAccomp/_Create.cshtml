@model AccompProject.Models.ACCOMPLISHMENT


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>




    @if (User.IsInRole("Physical"))
    {
        <h4 class="modal-title" id="myModalLabel">Regional Office</h4>  <h4>
            @Session["subproject"].ToString()
        </h4>
    }
</div>

@using (Html.BeginForm())
@*@using (Html.BeginForm("_Create", "PhysicalAccomp", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
{
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.IDAccomp, new { @Value = Session["idaccomp"].ToString() })
            @Html.HiddenFor(model => model.mnt, new { @Value = "", id = "mnts" })
            @Html.HiddenFor(model => model.year_covered, new { @Value = "", id = "yrs" })
            @Html.HiddenFor(model => model.newed)
            @Html.HiddenFor(model => model.restored)
            @Html.HiddenFor(model => model.rehab)
            @Html.HiddenFor(model => model.canals)
            @Html.HiddenFor(model => model.canal_lining)
            @Html.HiddenFor(model => model.structures)
            @Html.HiddenFor(model => model.roads)
            @Html.HiddenFor(model => model.GRAVEL)
            @Html.HiddenFor(model => model.COCONET)
            @Html.HiddenFor(model => model.HDPE)




            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.asof, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.asof, new { htmlAttributes = new { @class = "form-control", id = "mndt", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.asof, "", new { @class = "text-danger" })
                </div>

            </div>
            <hr />




            <h4>ACCOMPLISHMENT</h4>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.new_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.new_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.new_accomp, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.resto_accomp, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.resto_accomp, new { htmlAttributes = new { @class = "form-control saroamount" } })
                    @Html.ValidationMessageFor(model => model.resto_accomp, "", new { @class = "text-danger" })
                </div>


                @*<div class="col-md-2">
                    @Html.LabelFor(model => model.rehab_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.rehab_accomp, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.rehab_accomp, "", new { @class = "text-danger" })
                </div>*@
            </div>
            <hr>
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.rehab_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.rehab_accomp, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.rehab_accomp, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.canals_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.canals_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.canals_accomp, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.canal_lining_accomp, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.canal_lining_accomp, new { htmlAttributes = new { @class = "form-control saroamount" } })
                    @Html.ValidationMessageFor(model => model.canal_lining_accomp, "", new { @class = "text-danger" })
                </div>


                <div class="col-md-2">
                    @Html.LabelFor(model => model.structures_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.structures_accomp, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.structures_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.roads_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.roads_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.roads_accomp, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Beneficiary_accomp, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Beneficiary_accomp, new { htmlAttributes = new { @class = "form-control saroamount" } })
                    @Html.ValidationMessageFor(model => model.Beneficiary_accomp, "", new { @class = "text-danger" })
                </div>


                <div class="col-md-2">
                    @Html.LabelFor(model => model.JobGen, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.JobGen, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.JobGen, "", new { @class = "text-danger" })
                </div>
            </div>
     
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.HDPEACCOMP, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.HDPEACCOMP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HDPEACCOMP, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.COCONETACCOMP, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.COCONETACCOMP, new { htmlAttributes = new { @class = "form-control saroamount" } })
                    @Html.ValidationMessageFor(model => model.COCONETACCOMP, "", new { @class = "text-danger" })
                </div>


                <div class="col-md-2">
                    @Html.LabelFor(model => model.GRAVELACCOMP, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.GRAVELACCOMP, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.GRAVELACCOMP, "", new { @class = "text-danger" })
                </div>
            </div>

            
                   <hr />
            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Physical, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Physical, new { htmlAttributes = new { @class = "form-control", Id = "Phy" }})
                    @Html.ValidationMessageFor(model => model.Physical, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Value_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Value_accomp, new { htmlAttributes = new { @class = "form-control", Id="valuea" } })
                    @Html.ValidationMessageFor(model => model.Value_accomp, "", new { @class = "text-danger" })
                </div>

            </div>


            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Financial, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Financial, new { htmlAttributes = new { @class = "form-control", Id = "fin" } })
                    @Html.ValidationMessageFor(model => model.Financial, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Expenditures, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Expenditures, new { htmlAttributes = new { @class = "form-control", Id="exped" } })
                    @Html.ValidationMessageFor(model => model.Expenditures, "", new { @class = "text-danger" })
                </div>

            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Remarks_accomp, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks_accomp, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                @Html.Label("FILE", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="Avatar" name="uploadfile" />
                </div>
            </div>



        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Add" />
    </div>
}

<script type="text/javascript">
   
    $(function () {

        $("#fin").keyup(function (event) {
            var myval = $("#fin").val();
            var amt = $("#amt").val();

            $("#exped").val(((myval * amt * 10)));

        });

        $("#Phy").keyup(function (event) {

            var ival = $("#Phy").val();
            var amt1 = $("#amt").val();

            $("#valuea").val((ival * amt1 * 10));

        });

        var dateToday = new Date();
        var dte = '@Session["mnttoedit"]' + '/1/' + '@Session["yrtoedit"]';
       // alert(dte);
        var dateToday = new Date(dte);
        $('#mndt').datepicker(
                       {
                           dateFormat: "mm/yy",
                           changeMonth: true,
                           changeYear: true,
                           showButtonPanel: true,
                           minDate: dateToday,
                           onClose: function (dateText, inst) {


                               function isDonePressed() {
                                   return ($('#ui-datepicker-div').html().indexOf('ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all ui-state-hover') > -1);
                               }

                               if (isDonePressed()) {
                                   var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                                   var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                                   $(this).datepicker('setDate', new Date(year, month, 1)).trigger('change');


                                   var a = parseInt($("#ui-datepicker-div .ui-datepicker-month :selected").val());
                                   var b = parseInt(1);
                                   var c = a + b;


                                   $('#mnts').val(c);

                                   $('#yrs').val(year);

                                   $('.date-picker').focusout()//Added to remove focus from datepicker input box on selecting date
                               }
                           },
                           beforeShow: function (input, inst) {

                               inst.dpDiv.addClass('month_year_datepicker')

                               if ((datestr = $(this).val()).length > 0) {
                                   year = datestr.substring(datestr.length - 4, datestr.length);
                                   month = datestr.substring(0, 2);
                                   $(this).datepicker('option', 'defaultDate', new Date(year, month - 1, 1));
                                   $(this).datepicker('setDate', new Date(year, month - 1, 1));
                                   $(".ui-datepicker-calendar").hide();
                               }
                           }
                       })


    });

</script>
<style>
    .ui-datepicker-calendar {
        display: none;
    }
</style>