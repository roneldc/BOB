@using AccompProject.Helpers
@model IEnumerable<AccompProject.Models.PhysicalAccompView>


<div id="projectaccomp">

    <div class="panel panel-default">
        <div class="panel-heading">
            <strong></strong>
        </div>




        <div class="panel-body">
            @if (User.IsInRole("Physical") )
            {
                @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Create", "IMTSS", null, htmlAttributes: new { data_modal = "", id = "btnCreate", @class = "btn btn-primary pull-right" })*@
                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Create", "PhysicalAccomp", routeValues: new { Id = ViewBag.IDAccomp }, htmlAttributes: new { data_modal = "", @class = "btn btn-primary pull-right" })
            }
        </div>

        <table class="table table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.asof)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.newarea)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.restorearea)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.rehabarea)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.canalsaccomp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.canal_liningaccomp)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.structuresaccomp)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.roadsaccomp)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Physical)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.physicaltarget)
                </th>


                @*     <th>@Html.ActionLink("Add", "Create", "IMTSS", null, new { data_modal = "", id = "btnCreate", @class = "btn btn-small btn-primary pull-right" })</th>*@

            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.asof)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.newarea)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.restorearea)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.rehabarea)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.canalsaccomp)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.canal_liningaccomp)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.structuresaccomp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.roadsaccomp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Physical)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.physicaltarget)
                    </td>

                    <td>
                        <div class="pull-right">
                            &nbsp;

                            @if (Session["yrtoedit"].ToString() == item.yr.ToString())
                            {
                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-eye-close'></span>", "Edit", "MyEditTarget", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            }





                            @if (User.IsInRole("Central") || User.IsInRole("NISRIP Physical") || User.IsInRole("FSDE Physical") || User.IsInRole("SRIP Physical") || User.IsInRole("CARP Physical") || User.IsInRole("PIDP Physical") || User.IsInRole("ED"))
                            {
                                if (item.FileName != null)
                                {
                                    <a href="@Url.Action("Download", "PhysicalAccomp", new { id = item.FileId })" class="btn btn-info btn-lg">
                                        <span class="glyphicon glyphicon-download-alt"></span> Download
                                    </a>

                                }
                            }

                         
                                @*//ORIGINAL CODE*@
                                @if (Session["mnttoedit"].ToString() == item.mnt.ToString() && Session["yrtoedit"].ToString() == item.yr.ToString())
                                {
                                    if (User.IsInRole("Physical") || User.IsInRole("ED") || User.IsInRole("NISRIP Physical") || User.IsInRole("FSDE Physical") || User.IsInRole("SRIP Physical") || User.IsInRole("CARP Physical") || User.IsInRole("PIDP Physical"))
                                    {
                                        if (item.projectmonitor == "ED")
                                        {
                                            if (item.FileName != null)
                                            {
                                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                                            }
                                            else
                                            {
                                                if (item.mainproject == "FSDE")
                                                {
                                                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                                                }
                                                else
                                                {
                                                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default disabled" })
                                                }

                                            }
                                            @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })*@

                                        }
                                        else
                                        {
                                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                                            @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "MyEdit", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-default disabled" })*@

                                        }




                                        if (User.IsInRole("Physical") || User.IsInRole("CARP Physical"))
                                        {

                                            <a href="@Url.Action("EditFile", "PhysicalAccomp", new { id = item.IDAccomp, subp = item.subproject, mainp = item.mainproject, amt = item.amount, mnt = item.mnt, yr = item.yr })" class="btn btn-info btn-lg">
                                                <span class="glyphicon glyphicon-upload"></span> Upload
                                            </a>


                                        }


                                        @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "PhysicalAccomp", routeValues: new { id = item.IDPhysical }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })*@
                                    }

                                }
                            

                        </div>
                    </td>
                </tr>
            }
        </table>
    </div>

</div>

<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a[data-modal]").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                contentType: this.enctype,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        console.log(result.url);

                        $('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }
</script>

