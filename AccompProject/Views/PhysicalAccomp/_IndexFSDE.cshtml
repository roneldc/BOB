@using AccompProject.Helpers
@model IEnumerable<AccompProject.Models.FSDEPhysicalView>


<div id="projectaccomp">

    <div class="panel panel-default">
        <div class="panel-heading">
            <strong></strong>
        </div>



        <div class="panel-body">
            @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Create", "IMTSS", null, htmlAttributes: new { data_modal = "", id = "btnCreate", @class = "btn btn-primary pull-right" })*@
            @Html.ActionLink("Consultancy", "EditFSDEStudy", "PhysicalAccomp", new { id = Session["idaccomp"].ToString() }, htmlAttributes: new { @class = "btn btn-primary", title = "Consultancy" })
     @*       @Html.ActionLink("Consultancy", "EditFSDEStudyPersonel", "PhysicalAccomp", new { id = item.IDAccomp }, null)*@



        </div>

      

        <table class="table table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.asof)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.typeofStudy)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.physicalfs)

                </th>

                <th>
                    @Html.DisplayNameFor(model => model.physicalde)

                </th>


                @*     <th>@Html.ActionLink("Add", "Create", "IMTSS", null, new { data_modal = "", id = "btnCreate", @class = "btn btn-small btn-primary pull-right" })</th>*@

            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.asof)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.typeofStudy)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.physicalfs)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.physicalde)
                    </td>


                    <td>
                        <div class="pull-right">
                           @if (Session["mnttoedit"].ToString() == item.mnt.ToString() && Session["yrtoedit"].ToString() == item.yr.ToString())
                            {

                              @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "EDIT", "MyEditFSDE", "PhysicalAccomp", routeValues: new { id = item.IdFSDE }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                           }
                                
                        </div>
                    </td>
                </tr>
            }
        </table>
    </div>

</div>

<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a[data-modal]").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                contentType: this.enctype,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }
</script>

