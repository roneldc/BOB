@*<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>*@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyASJVuQHTbnowA2fyqOgCg7r67ru71lAmQ"></script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />

<div class="row">
    <div class="col-md-10">
        <div class="alert alert-danger" style="display:none" role="alert" id="errormessage"></div>
        <div class="alert alert-success" style="display:none" role="alert" id="successmessage"></div>
    </div>
</div>
<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {

    <section class="scripts">

        <script src="~/Scripts/markerclusterer.js"></script>
        <script type="text/javascript">


    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {
        var markerdatabase = @Html.Raw(ViewBag.Markers);
        console.log('Google Maps API version: ' + google.maps.version);

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
    //    var Tunisie = new google.maps.LatLng(14.638659, 121.043078);

        var Tunisie = new google.maps.LatLng(markerdatabase[0].GeoLong, markerdatabase[0].GeoLat);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 10,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.HYBRID
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
      

        var markers = [];
        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(markerdatabase, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.Username,
                'Id' : item.ID,              
                'draggable' : false
            });


            var $IDSYSTEM = item.IDSYSTEM;
          
      



            infoWindow(marker,map,item.Username,'')


         
            
            
            markers.push(marker);
        })
        console.log(markers);
        var markerCluster = new MarkerClusterer(map, markers, {imagePath:  '/Pic/Marker/m'});
    }


            google.maps.event.addDomListener(window, "load", Initialize);
            // global infowindow
            var iw = new google.maps.InfoWindow({
                maxWidth: 350
            });

            function infoWindow(marker, map, Username) {
                google.maps.event.addListener(marker, 'click', function() {
                   // var html = "<div><h3>" + title + "</h3><p><a href='" + address + "' target='_blank'>Read More</a></p></div>";
                    
                    var html = "<div>"  + "NAME OF Users : " + Username +  "</div>" 
                   
                  
                    iw.setContent(html);
                    // open the infowindow on the marker.
                    iw.open(map, marker);
                });
            }

        </script>

    </section>
}
