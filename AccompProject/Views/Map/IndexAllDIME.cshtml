@*<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>*@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyASJVuQHTbnowA2fyqOgCg7r67ru71lAmQ"></script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />

<div class="row">
    <div class="col-md-10">
        <div class="alert alert-danger" style="display:none" role="alert" id="errormessage"></div>
        <div class="alert alert-success" style="display:none" role="alert" id="successmessage"></div>
    </div>
</div>
<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {

    <section class="scripts">

        <script src="~/Scripts/markerclusterer.js"></script>
        <script type="text/javascript">


    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {
        var markerdatabase = @Html.Raw(ViewBag.Markers);
        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
    //    var Tunisie = new google.maps.LatLng(14.638659, 121.043078);

        var Tunisie = new google.maps.LatLng(markerdatabase[0].GeoLong, markerdatabase[0].GeoLat);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 10,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.HYBRID
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult

        //var iconBase = '../Pic/';
        //var icons = {
        //    2: {
        //        icon: iconBase + 'c.png'
        //    },
        //    1: {
        //        icon: iconBase + 'n.png'
        //    },
        //    4: {
        //        icon: iconBase + 'o.png'
        //    },
        //    3: {
        //        icon: iconBase + 'p.png'
        //    }
        //};


        //var data = [
        //          { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
        //          { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
        //          { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
        //          { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" },
        //           { "Id": 5, "PlaceName": "QC", "GeoLong": "14.638659", "GeoLat": " 121.043078" }
        //];


        //var data = [
        //          { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "14.639", "GeoLat": "121.0415" },
        //          {"Id": 2, "PlaceName": "Zaghouan",  "GeoLong": "14.639", "GeoLat": "121.044799" },
        //          { "Id": 3, "PlaceName": "Zaghouan", "GeoLong": "14.638", "GeoLat": "121.036" }

        //];

        var markers = [];
        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(markerdatabase, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.Systems,
                'Id' : item.idaccomp,              
                'draggable' : false
            });

            // Make the marker-pin blue!
     
            // put in some information about each json object - in this case, the opening hours.
            //var infowindow = new google.maps.InfoWindow({
            //    content:   "<div>"  + "NAME OF SYSTEMS : " + item.Systems +  "</div>" +
            //               "<div>"  + "MUNICIPALITY : " + item.Municipality + "</div>" 
            //});

            var $IDSYSTEM = item.IDSYSTEM;
          
            //marker.addListener('dragend', function(event){
                
            //    alert('Latitude : ' + event.latLng.lat() + ', ' + 'Longitude : ' + event.latLng.lng() + ' ' + item.IDSYSTEM);
            //    alert($IDSYSTEM);

            //    var data = JSON.stringify({ 
            //        'id': $IDSYSTEM,
            //        'lat': event.latLng.lat(),
            //        'lng': event.latLng.lng()
            //    });

            //    //{ id: $myid, lat: event.latLng.lat(), lng:  event.latLng.lng() },
            //    $.ajax({
            //        url: '/Map/Index',
            //        data: data,
            //        type: "POST",
            //        contentType: 'application/json',
            //        dataType: "json",
            //        success: function (data) {
            //            if (data.success == true) {
            //                $("#successmessage").html("SAVED").show().delay(5000).fadeOut();
            //                return true;
            //            }
            //            if (data.ExceptionMessage) {
            //                $("#errormessage").html(data.ExceptionMessage).show().delay(5000).fadeOut();
            //                return false;
            //            }
            //            return false;
            //        }
            //    });




            
            //});



            infoWindow(marker,map,item.Systems,'',item.idaccomp)


            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            //google.maps.event.addListener(marker, 'click', function () {
              
            //  //  infowindow.open(map, marker);

            //    for (var i = 0; i < marker.length; i++) {
            //        infowindow[i].close();
            //    }
						

            //    if(!marker.open){
            //        infowindow.open(map,marker);
            //        marker.open = true;
            //    }
            //    else{
            //        infowindow.close();
            //        marker.open = false;
            //    }
            //    google.maps.event.addListener(map, 'click', function() {
            //        infowindow.close();
            //        marker.open = false;
            //    });

            //});
        
            
            
            markers.push(marker);
        })
        console.log(markers);
       // var markerCluster = new MarkerClusterer(map, markers, {imagePath:  '/Pic/Marker/m'});
    }


            google.maps.event.addDomListener(window, "load", Initialize);
            // global infowindow
            var iw = new google.maps.InfoWindow({
                maxWidth: 350
            });

            function infoWindow(marker, map, Systems, description,idaccomp) {
                google.maps.event.addListener(marker, 'click', function() {
                   // var html = "<div><h3>" + title + "</h3><p><a href='" + address + "' target='_blank'>Read More</a></p></div>";
                    
                    var html = "<div>"  + "NAME OF SYSTEMS : " + Systems +  "</div>" +
                           "<div>"  + "Description : " + description + "</div>" +
                        " <img src=../Pic/DIME/" + idaccomp + "/" + Systems + " height = 300 width = 300 > "; 
                  
                    iw.setContent(html);
                    // open the infowindow on the marker.
                    iw.open(map, marker);
                });
            }

        </script>

    </section>
}
