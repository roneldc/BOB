@model AccompProject.Models.CANALS_STATIONING

@{
    ViewBag.Title = "Edit IA Canal";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IDIA)
    @Html.HiddenFor(model => model.YEAR_COVERED)
    @Html.HiddenFor(model => model.IA_NAME)
    @Html.HiddenFor(model => model.SORT)
@Html.HiddenFor(model => model.CANALID)

    <div class="form-horizontal">
        <h4>CANAL STATIONING</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })




        <div class="form-group">
            @Html.LabelFor(model => model.TYPE_CANAL, "TYPE OF CANAL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TYPE_CANAL, (IEnumerable<SelectListItem>)ViewBag.typecanal, string.Empty, new { @class = "form-control" })
   @Html.ValidationMessageFor(model => model.TYPE_CANAL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NAME_CANAL, "NAME OF CANAL (ex. A,B, Main)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NAME_CANAL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NAME_CANAL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FROMLENGTH, "FROM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FROMLENGTH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FROMLENGTH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TOLENGTH, "TO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TOLENGTH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TOLENGTH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LENGTH_CANAL, "TOTAL LENGTH OF CANAL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LENGTH_CANAL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LENGTH_CANAL, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
