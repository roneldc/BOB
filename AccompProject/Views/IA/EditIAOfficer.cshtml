@model AccompProject.Models.BOARD

@{
    ViewBag.Title = "Edit IA Canal";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IDIA)
    @Html.HiddenFor(model => model.YEAR_COVERED)
    @Html.HiddenFor(model => model.IA_NAME)

    @Html.HiddenFor(model => model.NOTERM)
    @Html.HiddenFor(model => model.DATETERM)
    @Html.HiddenFor(model => model.BOARDID)

    <div class="form-horizontal">
        <h4>BOARD AND OFFICERS</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })




        <div class="form-group">
            @Html.LabelFor(model => model.POSITION, "BOARD POSITION", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.POSITION, (IEnumerable<SelectListItem>)ViewBag.boardposition, string.Empty, new { @class = "form-control" })


                @*@Html.EditorFor(model => model.TYPE_CANAL, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.POSITION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BOARDNAME, "NAME", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BOARDNAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BOARDNAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TINNO, "TIN", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TINNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TINNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CONTACTNO, "CONTACT NO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CONTACTNO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONTACTNO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GENDER, "GENDER", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GENDER, (IEnumerable<SelectListItem>)ViewBag.GENDERname, string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />


        <div class="form-group">
            @Html.LabelFor(model => model.OFFICER_POSITION, "OFFICER POSITION", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OFFICER_POSITION, (IEnumerable<SelectListItem>)ViewBag.OFFICERposition, string.Empty, new { @class = "form-control" })


                @*@Html.EditorFor(model => model.TYPE_CANAL, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.OFFICER_POSITION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
