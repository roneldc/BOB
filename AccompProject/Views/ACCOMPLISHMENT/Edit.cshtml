@model AccompProject.Models.ACCOMPLISHMENT

@{
    ViewBag.Title = "Edit";
}

<h2></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PROJECT ACCOMPLISHMENT</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDAccomp)
        @Html.HiddenFor(model => model.RowVersion)

        @*<div class="form-group">
                @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.region, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.province, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Category1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category4, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category4, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.mainproject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mainproject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mainproject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.subproject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.subproject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.subproject, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.subsubproject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.subsubproject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.subsubproject, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.municipality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.municipality, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.municipality, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Allotment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Allotment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Allotment, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Obligation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Obligation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Obligation, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">

            <div class="row">


                <div class="col-md-3">
                    @Html.LabelFor(model => model.mainproject, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.mainproject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.mainproject, "", new { @class = "text-danger" })

                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", Id = "amt" } })
                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })


                </div>

            </div>
        </div>

        <div class="form-group">

            <div class="row">


                <div class="col-md-3">
                    @Html.LabelFor(model => model.subproject, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.subproject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.subproject, "", new { @class = "text-danger" })

                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.municipality, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.municipality, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.municipality, "", new { @class = "text-danger" })


                </div>

            </div>
        </div>



        <div class="form-group">

            <div class="row">


                <div class="col-md-3">
                    @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.province, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })

                </div>

            </div>
        </div>

        <hr />

        @if (User.IsInRole("Physical"))
        {

            <div class="form-group">
                <div class="row">

                    <div class="col-md-3">
                        <h4>Particulars</h4>
                    </div>

                    <div class="col-md-3">
                        <h4>Target</h4>
                    </div>

                    <div class="col-md-3">
                        <h4>Previous Month</h4>
                    </div>

                    <div class="col-md-3">
                        <h4>Current Month</h4>
                    </div>


                </div>
            </div>


            <div class="form-group">
                <div class="row">

                    <div class="col-md-3">
                        NEW
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.newed, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.newed, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_new, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_new, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.new_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.new_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>

            </div>

            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        RESTORE
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.restored, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.restored, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_resto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_new, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.resto_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.new_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>


            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        REHAB
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.rehab, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.rehab, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_rehab, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_rehab, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.rehab_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.rehab_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>



            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        CANALS
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.canals, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.canals, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_canal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_canal, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.canals_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.canals_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        CANAL LINING
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.canal_lining, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.canal_lining, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_canal_lining, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_canal_lining, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.canal_lining_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.canal_lining_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        STRUCTURES
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.structures, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.structures, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_structure, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_structure, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.structures_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.structures_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>


            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        JOB GENERATION
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.jobs, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.jobs, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_job, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_job, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.JobGen, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobGen, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        FARMER BENEFICIARIES
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.farmer_beneficiaries, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.farmer_beneficiaries, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.p_fb, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.p_fb, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Beneficiary_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Beneficiary_accomp, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>





            <hr />



            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Physical, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Physical, new { htmlAttributes = new { @class = "form-control", Id = "Phy" } })
                        @Html.ValidationMessageFor(model => model.Physical, "", new { @class = "text-danger" })
                    </div>




                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Value_accomp, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Value_accomp, new { htmlAttributes = new { @class = "form-control", Id = "valuea" } })
                        @Html.ValidationMessageFor(model => model.Value_accomp, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>


            <div class="form-group">

                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Financial, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Financial, new { htmlAttributes = new { @class = "form-control", Id = "fin" } })
                        @Html.ValidationMessageFor(model => model.Financial, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Expenditures, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Expenditures, new { htmlAttributes = new { @class = "form-control", Id = "exped" } })
                        @Html.ValidationMessageFor(model => model.Expenditures, "", new { @class = "text-danger" })


                    </div>
                </div>

            </div>


            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Remarks_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Remarks_accomp, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks_accomp, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>
        }

        @if (User.IsInRole("Financial"))
        {
            <h2>Central Office</h2>
            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @Html.LabelFor(model => model.saro, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.saro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.saro, "", new { @class = "text-danger" })

                    </div>


                    <div class="col-md-3">
                        @*    @Html.ActionLink("ASA", "Index", new { Controller = "ASATables", Id = Model.IDAccomp }, new { @class = "btn btn-primary btn-large" })*@
                        @Html.LabelFor(model => model.cash, htmlAttributes: new { @class = "control-label col-md-2" })


                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.cash, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cash, "", new { @class = "text-danger" })

                    </div>


                </div>
            </div>



            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @*    @Html.ActionLink("ASA", "Index", new { Controller = "ASATables", Id = Model.IDAccomp }, new { @class = "btn btn-primary btn-large" })*@
                        @Html.LabelFor(model => model.asano, htmlAttributes: new { @class = "control-label col-md-2" })


                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.asano, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.asano, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-3">
                        @*    @Html.ActionLink("ASA", "Index", new { Controller = "ASATables", Id = Model.IDAccomp }, new { @class = "btn btn-primary btn-large" })*@
                        @Html.LabelFor(model => model.asa, htmlAttributes: new { @class = "control-label col-md-2" })


                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.asa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.asa, "", new { @class = "text-danger" })

                    </div>

                </div>
            </div>



        }

        @if (User.IsInRole("Financial Region"))
        {

            <h2>Regional Office</h2>
            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @Html.LabelFor(model => model.saro_region, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.saro_region, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.saro_region, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.disbursement, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.disbursement, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.disbursement, "", new { @class = "text-danger" })


                    </div>

                </div>
            </div>

            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @*    @Html.ActionLink("ASA", "Index", new { Controller = "ASATables", Id = Model.IDAccomp }, new { @class = "btn btn-primary btn-large" })*@
                        @Html.LabelFor(model => model.asa_region, htmlAttributes: new { @class = "control-label col-md-2" })


                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.asa_region, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.asa_region, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Obligation, htmlAttributes: new { @class = "control-label col-md-2" })

                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Obligation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Obligation, "", new { @class = "text-danger" })


                    </div>

                </div>
            </div>

            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @*    @Html.ActionLink("ASA", "Index", new { Controller = "ASATables", Id = Model.IDAccomp }, new { @class = "btn btn-primary btn-large" })*@
                        @Html.LabelFor(model => model.cash_region, htmlAttributes: new { @class = "control-label col-md-2" })


                    </div>

                    <div class="col-md-3">
                        @Html.EditorFor(model => model.cash_region, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cash_region, "", new { @class = "text-danger" })

                    </div>



                </div>
            </div>

            <div class="form-group">

                <div class="row">


                    <div class="col-md-3">
                        @Html.LabelFor(model => model.remarks_financial, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.remarks_financial, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.remarks_financial, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>



        }



        @if (User.IsInRole("Financial"))
        {

            @Html.HiddenFor(model => model.Value_accomp)
            @* @Html.HiddenFor(model => model.Expenditures)*@

            @Html.HiddenFor(model => model.newed)
            @Html.HiddenFor(model => model.new_accomp)
            @Html.HiddenFor(model => model.restored)
            @Html.HiddenFor(model => model.resto_accomp)
            @Html.HiddenFor(model => model.rehab)
            @Html.HiddenFor(model => model.rehab_accomp)
            @Html.HiddenFor(model => model.canals)
            @Html.HiddenFor(model => model.canals_accomp)
            @Html.HiddenFor(model => model.canal_lining)
            @Html.HiddenFor(model => model.canal_lining_accomp)
            @Html.HiddenFor(model => model.structures_accomp)
            @Html.HiddenFor(model => model.structures)
            @Html.HiddenFor(model => model.farmer_beneficiaries)
            @Html.HiddenFor(model => model.Beneficiary_accomp)
            @Html.HiddenFor(model => model.JobGen)
            @Html.HiddenFor(model => model.jobs)

            @Html.HiddenFor(model => model.p_new)
            @Html.HiddenFor(model => model.p_resto)
            @Html.HiddenFor(model => model.p_rehab)
            @Html.HiddenFor(model => model.p_canal_lining)
            @Html.HiddenFor(model => model.p_canal)
            @Html.HiddenFor(model => model.p_structure)
            @Html.HiddenFor(model => model.p_job)
            @Html.HiddenFor(model => model.p_fb)
            @Html.HiddenFor(model => model.Expenditures)
            @Html.HiddenFor(model => model.Physical)
            @Html.HiddenFor(model => model.Financial)
            @Html.HiddenFor(model => model.saro_region)
            @Html.HiddenFor(model => model.asa_region)
            @Html.HiddenFor(model => model.cash_region)
            @Html.HiddenFor(model => model.disbursement)
            @Html.HiddenFor(model => model.Obligation)
            @Html.HiddenFor(model => model.Remarks_accomp)
        }


        @if (User.IsInRole("Financial Region"))
        {

            @Html.HiddenFor(model => model.Value_accomp)
            @* @Html.HiddenFor(model => model.Expenditures)*@

            @Html.HiddenFor(model => model.newed)
            @Html.HiddenFor(model => model.new_accomp)
            @Html.HiddenFor(model => model.restored)
            @Html.HiddenFor(model => model.resto_accomp)
            @Html.HiddenFor(model => model.rehab)
            @Html.HiddenFor(model => model.rehab_accomp)
            @Html.HiddenFor(model => model.canals)
            @Html.HiddenFor(model => model.canals_accomp)
            @Html.HiddenFor(model => model.canal_lining)
            @Html.HiddenFor(model => model.canal_lining_accomp)
            @Html.HiddenFor(model => model.structures_accomp)
            @Html.HiddenFor(model => model.structures)
            @Html.HiddenFor(model => model.farmer_beneficiaries)
            @Html.HiddenFor(model => model.Beneficiary_accomp)
            @Html.HiddenFor(model => model.JobGen)
            @Html.HiddenFor(model => model.jobs)

            @Html.HiddenFor(model => model.p_new)
            @Html.HiddenFor(model => model.p_resto)
            @Html.HiddenFor(model => model.p_rehab)
            @Html.HiddenFor(model => model.p_canal_lining)
            @Html.HiddenFor(model => model.p_canal)
            @Html.HiddenFor(model => model.p_structure)
            @Html.HiddenFor(model => model.p_job)
            @Html.HiddenFor(model => model.p_fb)
            @Html.HiddenFor(model => model.Expenditures)
            @Html.HiddenFor(model => model.Physical)
            @Html.HiddenFor(model => model.Financial)
            @Html.HiddenFor(model => model.saro)
            @Html.HiddenFor(model => model.asa)
            @Html.HiddenFor(model => model.cash)
            @Html.HiddenFor(model => model.Remarks_accomp)

        }


        @if (User.IsInRole("Physical"))
        {

            @Html.HiddenFor(model => model.saro)
            @Html.HiddenFor(model => model.Value_accomp)
            @Html.HiddenFor(model => model.asa)
            @Html.HiddenFor(model => model.cash_region)
            @Html.HiddenFor(model => model.cash)
            @Html.HiddenFor(model => model.asa_region)
            @Html.HiddenFor(model => model.saro_region)
            @Html.HiddenFor(model => model.Obligation)
            @Html.HiddenFor(model => model.disbursement)
            @Html.HiddenFor(model => model.remarks_financial)


        }



        @Html.HiddenFor(model => model.year)
        @Html.HiddenFor(model => model.IDAccomp)
        @Html.HiddenFor(model => model.region)
        @*@Html.HiddenFor(model => model.province)*@
        @Html.HiddenFor(model => model.district)
        @Html.HiddenFor(model => model.Category1)
        @Html.HiddenFor(model => model.Category2)
        @Html.HiddenFor(model => model.Category3)
        @Html.HiddenFor(model => model.Category4)
        @Html.HiddenFor(model => model.subsubproject)
        @Html.HiddenFor(model => model.Allotment)

        @Html.HiddenFor(model => model.remarks)
        @Html.HiddenFor(model => model.status)
        @Html.HiddenFor(model => model.Phy)
        @Html.HiddenFor(model => model.Fin)
        @Html.HiddenFor(model => model.FUSA)
        @Html.HiddenFor(model => model.OK)
        @Html.HiddenFor(model => model.MONITORING1)
        @Html.HiddenFor(model => model.MONITORING2)
        @Html.HiddenFor(model => model.PC)
        @Html.HiddenFor(model => model.VAL)
        @Html.HiddenFor(model => model.EXP)
        @Html.HiddenFor(model => model.as_of)
        @Html.HiddenFor(model => model.SAMPLE)
        @Html.HiddenFor(model => model.roads)
        @Html.HiddenFor(model => model.p_road)
        @Html.HiddenFor(model => model.roads_accomp)
        @Html.HiddenFor(model => model.mnt)
        @Html.HiddenFor(model => model.year_covered)










        @*
            <div class="form-group">
                @Html.LabelFor(model => model.newed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.newed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.newed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.restored, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.restored, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.restored, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rehab, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.rehab, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rehab, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.canals, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.canals, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.canals, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.canal_lining, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.canal_lining, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.canal_lining, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.structures, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.structures, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.structures, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.roads, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.roads, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.roads, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.farmer_beneficiaries, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.farmer_beneficiaries, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.farmer_beneficiaries, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jobs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jobs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.new_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.new_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.new_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.resto_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.resto_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.resto_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rehab_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.rehab_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rehab_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.canals_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.canals_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.canals_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.canal_lining_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.canal_lining_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.canal_lining_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.structures_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.structures_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.structures_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.roads_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.roads_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.roads_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiary_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Beneficiary_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Beneficiary_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobGen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobGen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobGen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Physical, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Physical, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Physical, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Financial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Financial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Financial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Value_accomp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Value_accomp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Value_accomp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Expenditures, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Expenditures, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Expenditures, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FUSA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FUSA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FUSA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OK, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MONITORING1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MONITORING1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MONITORING1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MONITORING2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MONITORING2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MONITORING2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VAL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EXP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EXP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EXP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.as_of, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.as_of, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.as_of, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SAMPLE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SAMPLE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SAMPLE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.saro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.saro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.saro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.asa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.asa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.asa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_new, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_new, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_new, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_resto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_resto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_resto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_rehab, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_rehab, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_rehab, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_canal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_canal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_canal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_canal_lining, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_canal_lining, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_canal_lining, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_structure, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_structure, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_structure, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_road, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_road, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_road, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_job, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_job, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_job, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.p_fb, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.p_fb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.p_fb, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

