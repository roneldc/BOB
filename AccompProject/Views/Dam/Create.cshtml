@model AccompProject.Models.GeneralInformation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.IDDam)

        <h4>General Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.DamName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DamName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DamName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
           @*     @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Province, (IEnumerable<SelectListItem>)ViewBag.Myprovince, string.Empty, new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Municipality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Municipality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Municipality, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
      
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>



            @Html.LabelFor(model => model.TypeDam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
              @*  @Html.EditorFor(model => model.TypeDam, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.TypeDam, (IEnumerable<SelectListItem>)ViewBag.TypeOfDam, string.Empty, new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.TypeDam, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">

            @Html.LabelFor(model => model.SA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.SA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SA, "", new { @class = "text-danger" })
            </div>
            
        </div>



        <div class="form-group">
            <div class="col-md-offset-1">
                <b><u>POINT OF DIVERSION</u></b>

            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })

            </div>
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.CompletionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CompletionDate, new { htmlAttributes = new { @class = "form-control", id = "datepicker1" } })
                @Html.ValidationMessageFor(model => model.CompletionDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ConstructionCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ConstructionCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConstructionCost, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.WaterSource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WaterSource, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterSource, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


    

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">


    $(function () {


        $('#datepicker1').datepicker();

    });

</script>