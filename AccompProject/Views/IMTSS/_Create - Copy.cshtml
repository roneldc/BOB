@model AccompProject.Models.IMTSS_Physical


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Add New Particulars</h4>
</div>

@using (Html.BeginForm())
{
    <div class="modal-body">

        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IDAccomp, new { @Value = Session["idaccomp"].ToString() })
            @Html.HiddenFor(model => model.as_of, new { @Value = Session["asof"].ToString() })
            @Html.HiddenFor(model => model.year_covered, new { @Value = Session["yr"].ToString() })
            @Html.HiddenFor(model => model.mnt, new { @Value = Session["mnt"].ToString() })


            <div class="form-group">
                @Html.LabelFor(model => model.Particulars, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                  @*  @Html.EditorFor(model => model.Particulars, new { htmlAttributes = new { @class = "form-control" } })*@

                   @* @Html.DropDownList("particularsid", null, string.Empty, new { @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.Particulars, (IEnumerable<SelectListItem>)ViewBag.particularsid,string.Empty, new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Particulars, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.subParticulars, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                 @*   @Html.EditorFor(model => model.subParticulars, new { htmlAttributes = new { @class = "form-control" } })*@
                 @*   @Html.DropDownList("subparticularsid", null, string.Empty, new { @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.subParticulars, (IEnumerable<SelectListItem>)ViewBag.subparticularsid, string.Empty, new { @class = "form-control", id = "mysamplejq" })


                    @Html.ValidationMessageFor(model => model.subParticulars, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.subsubparticulars, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @*@Html.DropDownList("MovieType")*@
                  @*  @Html.EditorFor(model => model.subsubparticulars, new { htmlAttributes = new { @class = "form-control" } })*@
                  @* @Html.DropDownList("subsubparticularsid",null,string.Empty, new { @class = "form-control"})*@
                    @Html.DropDownListFor(model => model.subsubparticulars, (IEnumerable<SelectListItem>)ViewBag.subsubparticularsid, string.Empty, new { @class = "form-control" })


                     @Html.ValidationMessageFor(model => model.subsubparticulars, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.total_for_year, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                      @Html.EditorFor(model => model.total_for_year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.total_for_year, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.target_actual, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.target_actual, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.target_actual, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.accomp_actual, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.accomp_actual, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.accomp_actual, "", new { @class = "text-danger" })
                </div>
            </div>




        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Add" />
    </div>
}