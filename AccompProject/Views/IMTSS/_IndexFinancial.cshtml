@*@model IEnumerable<AccompProject.Models.IMTSSViewModelPhysical>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.province)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.district)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.mainproject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.subproject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.municipality)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.mnt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.year_covered)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.as_of)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Particulars)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubParticularsID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubParticulars)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubSubParticulars)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.total_for_year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.target_actual)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.accomp_actual)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.quarter)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.province)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.district)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.mainproject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.subproject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.municipality)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.mnt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.year_covered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.as_of)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Particulars)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubParticularsID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubParticulars)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubSubParticulars)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.total_for_year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.target_actual)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.accomp_actual)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.quarter)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
    }

    </table>*@


@using AccompProject.Helpers
@model IEnumerable<AccompProject.Models.IMTSSViewModelFinancial>




<div class="panel panel-default">
    <div class="panel-heading">
        <strong>IMTSS PARTICULARS FINANCIAL</strong>
    </div>

    <div class="panel-body">
        @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Create", "IMTSS", null, htmlAttributes: new { data_modal = "", id = "btnCreate", @class = "btn btn-primary pull-right" })*@
        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "CreateFinancial", "IMTSS", routeValues: new { Id = ViewBag.IDAccomp }, htmlAttributes: new { data_modal = "", @class = "btn btn-primary pull-right" })
    </div>

    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FinancialParticulars)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Particulars)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Total_budget)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Total_Expenses)
            </th>

       


            @*     <th>@Html.ActionLink("Add", "Create", "IMTSS", null, new { data_modal = "", id = "btnCreate", @class = "btn btn-small btn-primary pull-right" })</th>*@

        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FinancialParticulars)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Particulars)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Total_budget)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Total_Expenses)
                </td>

            


                <td>
                    <div class="pull-right">
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Update", "IMTSS", routeValues: new { id = item.imtssFinancialID }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                        &nbsp;
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "DeleteFinancial", "IMTSS", routeValues: new { id = item.imtssFinancialID }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })

                    </div>
                </td>
            </tr>
        }
    </table>
</div>



<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a[data-modal]").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $('#replacetarget').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });
            return false;
        });
    }
</script>

