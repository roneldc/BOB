//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccompProject.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class PhysicalAccompView 
        //: IValidatableObject
    {
        public string IDAccomp { get; set; }
        public Nullable<int> year { get; set; }
        public string region { get; set; }
        public string province { get; set; }
        public string district { get; set; }
        public string Category1 { get; set; }
        public string Category2 { get; set; }
        public string Category3 { get; set; }
        public string Category4 { get; set; }
        public string mainproject { get; set; }
        public string subproject { get; set; }
        public string municipality { get; set; }
        public Nullable<double> amount { get; set; }
        public int IDPhysical { get; set; }
        [DisplayName("NEW")]
        public Nullable<double> newarea { get; set; }
        [DisplayName("RESTORE")]
        public Nullable<double> restorearea { get; set; }
        [DisplayName("REHAB")]
        public Nullable<int> rehabarea { get; set; }
        [DisplayName("CANAL (km.)")]
        public Nullable<double> canalsaccomp { get; set; }
        [DisplayName("CANAL LINING (km.)")]
        public Nullable<double> canal_liningaccomp { get; set; }
        [DisplayName("STRUCTURE")]
        public Nullable<double> structuresaccomp { get; set; }
        [DisplayName("ROAD")]
        public Nullable<double> roadsaccomp { get; set; }
        [DisplayName("FARMER BENEFICIARIES")]
        public Nullable<int> fbaccomp { get; set; }
        [DisplayName("JOBS")]
        public Nullable<int> jobsaccomp { get; set; }
        [DisplayName("MONTH / YEAR")]
        [Required(ErrorMessage = "AS Of Date is required")]
        public string asof { get; set; }
        public Nullable<int> mnt { get; set; }
        public Nullable<int> yr { get; set; }
        public Nullable<double> newed { get; set; }
        public Nullable<double> restored { get; set; }
        public Nullable<double> rehab { get; set; }
        public Nullable<double> canals { get; set; }
        public Nullable<double> canal_lining { get; set; }
        public Nullable<double> structures { get; set; }
        public Nullable<double> roads { get; set; }
        public Nullable<int> farmer_beneficiaries { get; set; }
        public Nullable<int> jobs { get; set; }
        [Required]
        [DataType(DataType.MultilineText)]
        [DisplayName("REMARKS")]
        public string remarksAccomp { get; set; }
        [DisplayName("PHYSICAL (%)")]
        public Nullable<double> Physical { get; set; }
        [DisplayName("FINANCIAL (%)")]
        public Nullable<double> Financial { get; set; }
        [DisplayName("VALUE ACCOMPLISHMENT")]
        public Nullable<double> ValueAccomp { get; set; }
        [DisplayName("EXPENDITURES")]
        public Nullable<double> Expenditures { get; set; }
        public string maindescription { get; set; }
        [DisplayName("HDPE (km.)")]
        public Nullable<double> HDPE { get; set; }
        [DisplayName("COCONET (sq. m.)")]
        public Nullable<double> COCONET { get; set; }
        [DisplayName("GRAVEL (km.)")]
        public Nullable<double> GRAVEL { get; set; }
        [DisplayName("HDPE (km.)")]
        public Nullable<double> HDPEACCOMP { get; set; }
        [DisplayName("COCONET (sq. m.)")]
        public Nullable<double> COCONETACCOMP { get; set; }
        [DisplayName("GRAVEL (km.)")]
        public Nullable<double> GRAVELACCOMP { get; set; }
        public string stat { get; set; }
        public Nullable<int> FileId { get; set; }
        public string FileName { get; set; }
        public string ContentType { get; set; }
        public byte[] Content { get; set; }
        public Nullable<int> FileType { get; set; }
        public string infra { get; set; }
        public string projectmonitor { get; set; }
        public string status { get; set; }
        public string category5 { get; set; }
        [DisplayName("PHYSICAL TARGET (%)")]
        public Nullable<double> physicaltarget { get; set; }
        public Nullable<double> physicaltargetvalueaccomp { get; set; }
        

        //public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        //{

        //    if (newarea > newed)
        //    {
        //        yield return new ValidationResult("Accomplishment is greater than target : NEW!");
        //    }
        //    if (restorearea > restored)
        //    {
        //        yield return new ValidationResult("Accomplishment is greater than target : RESTO!");
        //    }
        //    //if (rehabarea > rehab)
        //    //{
        //    //    yield return new ValidationResult("Accomplishment is greater than target : REHAB!");
        //    //}

        //    //if (canalsaccomp > canals)
        //    //{
        //    //    if (canals != 0)
        //    //    {
        //    //        yield return new ValidationResult("Accomplishment is greater than target : CANALS!");
        //    //    }
        //    //}

        //    //if (canal_liningaccomp > canal_lining)
        //    //{
        //    //    if (canal_lining != 0)
        //    //    {
        //    //        yield return new ValidationResult("Accomplishment is greater than target : CANAL LINING!");
        //    //    }
        //    //}

        //    //if (structuresaccomp > structures)
        //    //{
        //    //    if (structures != 0)
        //    //    {
        //    //        yield return new ValidationResult("Accomplishment is greater than target : STRUCTURES!");
        //    //    }
        //    //}



        //}
    }
}
