//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccompProject.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Web.DynamicData;

    public partial class ContractView : IValidatableObject
    {
        public string IDAccomp { get; set; }
        public Nullable<int> year { get; set; }
        public string region { get; set; }
        public string province { get; set; }
        public string mainproject { get; set; }
        public string maindescription { get; set; }
        public string subproject { get; set; }
        public string municipality { get; set; }
        public Nullable<double> amount { get; set; }
        [DisplayName("ABC Amount")]
        public Nullable<double> ABCAmount { get; set; }
        public int ContractID { get; set; }
        [Required(ErrorMessage = "This field is Required")]
            [DisplayName("Contract Name")]
        public string ContractName { get; set; }
        [DataType(DataType.MultilineText)]
            [DisplayName("Description")]
        public string ContractDescription { get; set; }
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}")]
        [DisplayName("Effectivity of Contract / NTP")]
        public Nullable<System.DateTime> ContractDate { get; set; }
             [DisplayFormat(DataFormatString = "{0:N2}", ApplyFormatInEditMode = false)]
            [DisplayName("Amount of Contract")]
        public Nullable<double> ContractAmount { get; set; }
             public Nullable<double> PercentofContract { get; set; }
         [DisplayName("Name of Contractor")]
         [Required(ErrorMessage = "Name of Contractor is Required")]
             public string ContractorName { get; set; }
        [Required(ErrorMessage = "This field is Required")]
         [DisplayName("Target Start")]
             public Nullable<System.DateTime> TargetStart { get; set; }
        [DisplayName("Original Expiry Date")]
        [Required(ErrorMessage = "This field is Required")]
        public Nullable<System.DateTime> TargetEnd { get; set; }
        [DisplayName("Actual Start")]
        [Required(ErrorMessage = "This field is Required")]
             public Nullable<System.DateTime> ActualStart { get; set; }
        [DisplayName("Estimated End")]
        [Required(ErrorMessage = "This field is Required")]
             public Nullable<System.DateTime> EstimatedEnd { get; set; }
        public string infra { get; set; }
         [DisplayName("Contract Duration")]
        public Nullable<int> ContractDuration { get; set; }
         [DisplayName("Revised Expiry Date")]
        public Nullable<System.DateTime> RevisedExpiryDate { get; set; }
          [DataType(DataType.MultilineText)]
         [DisplayName("Remarks")]
         public string RemarksContract { get; set; }
                [DisplayName("Contract Reference No.")]
         public string ContractReferenceNo { get; set; }
         public string projectmonitor { get; set; }
           [DisplayName("PhilGeps Posting")]
         public Nullable<System.DateTime> PhilGepsPositng { get; set; }
        [DisplayName("Revise Contract Duration")]
        public Nullable<int> ReviseContractDuration { get; set; }
           [DisplayName("Revise Contract Amount")]
        public Nullable<double> ReviseContractAmount { get; set; }
           public string type { get; set; }
           public TypeContract typeofcon { get; set; }


            public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
            {

                if (ContractAmount <= 2)
                {
                    yield return new ValidationResult("Invalid Input");
                }
              



            }







    }



    public enum TypeContract
    {
        LMC,
        CO,

    }
}
